name: Run tests
on:
  push:
    branches: ["*"]
    tags-ignore: ["*"]
  pull_request:
    branches: ["*"]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install '.[ci]'
      - name: Flake8
        run: |
          flake8 sprockets tests.py
      - name: Formatting
        run: |
          yapf -pqr docs setup.py sprockets tests.py
      - name: Typing
        run: |
          mypy sprockets/mixins/mediatype/ examples.py

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install '.[ci]'
          python -m pip install -e '.[msgpack]'
      - name: Run tests
        run: |
          coverage run -m unittest tests.py
          coverage report
          coverage xml -o ./coverage.xml
      - name: Send coverage data to codecov.io
        uses: codecov/codecov-action@v1.3.2
        if: github.event_name == 'push' && github.repository == 'sprockets/sprockets.mixins.media_type'
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Read the Docs compatible python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install '.[docs]'
          python -m pip install .
      - name: Build documentation
        run: |
          ./setup.py build_sphinx
